name: Tabula-AI (Note-Dev CI/CD)
run-name: '${{ github.event.pull_request.title }}'

# Event: develop branch merge
on:
  pull_request:
    branches:
      - develop
    types:
      - closed
    paths:
      - 'services/note-service/**'
      - 'libs/note-sdk/**'
      - 'libs/common-sdk/**'

jobs:
  build-and-push:
    name: Build & Push Note Service Docker Image
    runs-on: ubuntu-latest
    steps:
      # Actions: chekcout action3
      - name: Checkout Code
        uses: actions/checkout@v3

      # Dockerhub 로그인
      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker build
      - name: Build Docker Image
        run: docker buildx build --platform linux/amd64 -f Dockerfile.noteDev -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NOTE_DEV_APPLICATION }}:latest .
  
      # Docker push
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NOTE_DEV_APPLICATION }}:latest
    
  deploy:
    name: Deploy on AWS EC2 Server(Dev)
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # chekcout action의 3 버전을 Actions으로써 실행
      - name: Checkout Code
        uses: actions/checkout@v3

      # AWS EC2 연결 및 배포
      - name: Connect to AWS EC2 and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEV_AWS_HOST }}
          username: ${{ secrets.DEV_AWS_USER }}
          key: ${{ secrets.DEV_AWS_PRIVATE_KEY }}
          # 기존 AWS EC2 서버에서 수행한 명령어 작성
          script: |
            cd ai
            sudo docker stop ${{ secrets.NOTE_DEV_APPLICATION }}
            sudo docker rm ${{ secrets.NOTE_DEV_APPLICATION }}
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NOTE_DEV_APPLICATION }}:latest
            sudo docker run -d -p 8000:8000 --name ${{ secrets.NOTE_DEV_APPLICATION }} --env-file .env.dev ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NOTE_DEV_APPLICATION }}:latest
            sudo docker image prune -a -f